10 REM SPACE LANDER GAME (C64 BASIC)
15 GOSUB SETGRAPHICS: DIM OB(800)
20 POKE 53280,0 : POKE 53281,0
FOR I=0 TO 100: OB(I)=0: NEXT
30 PRINT "{CLR}{HOME}{WHITE}{13}{13}{13}{13}"
FOR I=100 TO 200: OB(I)=0: NEXT
40 PRINT "{13}{LIGHTBLUE}      SPACE=THRUST O=LEFT P=RIGHT"
FOR I=200 TO 300: OB(I)=0: NEXT
50 PRINT "{13}           CHOOSE DIFFICULTY:"
FOR I=300 TO 400: OB(I)=0: NEXT
60 PRINT "{13}{GREEN}               1 EASY"
FOR I=400 TO 500: OB(I)=0: NEXT
70 PRINT "{13}{YELLOW}               2 MEDIUM"
FOR I=500 TO 600: OB(I)=0: NEXT
80 PRINT "{13}{PINK}               3 HARD"
FOR I=600 TO 700: OB(I)=0: NEXT
90 GOSUB LANDERSCREEN
FOR I=700 TO 799: OB(I)=0: NEXT
100 REM WAIT FOR DIFFICULTY SELECTION
100 GET C$ :IF C$ = ""THEN GOTO 100

110 REM TARGET SPEED (SETS DIFFICULTY)
120 IF C$ = "1"THEN TS=0.65
130 IF C$ = "2"THEN TS=0.55
140 IF C$ = "3"THEN TS=0.45
150 IF VAL(C$) <= 0 OR VAL(C$) > 3 THEN GOTO 100
155 PRINT CHR$(147)
160 GY=20: X=20 :Y=1 :S=0.5 :T=0 :F=50 :G=0.15
170 GOSUB 570

210 REM STORE OLD VALUES
220 OX=X :OY=Y

230 GET C$ : REM MOVEMENT KEYS
240 IF C$="P" AND X < 39 THEN X=X+1
250 IF C$="O" AND X > 0 THEN X=X-1

260 REM THRUST
270 IF F > 0 AND C$=" " AND T < (G*2) THEN T=T+0.25

280 REM SPEED IS SPEED MINUS THRUST PLUS GRAVITY
290 S=S-T+G
300 IF S > 1 THEN S=1
310 IF T > (G*2) THEN T=(G*2)
320 IF F > 0 AND T > 0 THEN F=F-1
330 IF T <= 0 THEN T=0
340 IF T > 0 THEN T=T-0.2
350 IF F = 0 THEN T = 0

370 REM HEIGHT IS PREVIOUS HEIGHT PLUS SPEED
380 Y=Y+S
390 IF Y < 1 THEN Y = 1
400 POKE 1031,32 
410 PRINT "{HOME}{cyan}FUEL{GRAY3} ";F
420 PRINT "{cyan}SPEED{GRAY3} "; LEFT$(STR$(S),3);" "
430 PRINT "{cyan}THRUST{GRAY3} "; LEFT$(STR$(ABS(T)),3);" {RVS OFF}{BLACK}"

440 REM COLLISION AND LANDING TEST
445 IF INT(Y+1) >= GY THEN GOTO 800
450 IF OB(INT(Y)*40+X) <> 0 THEN GOTO CRASH

460 REM OTHERWISE REPEAT
470 GOSUB 500
480 GOTO 210

500 REM ERASE THE SHIP
510 IF OX <> X OR OY <> Y AND INT(Y)<= GY THEN POKE 1024+(INT(OY)*40)+OX,32 :POKE 1024+(INT(OY+1)*40)+OX,32

520 REM DRAW THE SHIP
530 POKE 1024+(INT(Y)*40)+X,35
540 IF C$=" " THEN POKE 1024+(INT(Y+1)*40)+X,36
550 RETURN

570 REM DRAW GROUND AND LANDING PAD USING OFFSET
575 FOR I=0 TO 39: OF=GY*40+I : POKE 55296+OF,9: GC=(RND(1)*3)+27: POKE 1024+OF,GC: NEXT
580 RS = RND(-TI) : PS=INT(RND(1)*34)+1 : PE=PS+5
585 FOR I=PS TO PE: OF=GY*40+I : POKE 55296+OF,12: POKE 1024+OF,37: NEXT

590 REM DRAW OBSTACLES (OPTIMISED)
596 FOR I=1 TO 10
597 RX=INT(RND(1)*40): RY=INT(RND(1)*(GY-2)): OB(RY*40+RX)=34: POKE 55296+(RY*40)+RX,12: POKE 1024+(RY*40)+RX,34
601 NEXT
602 RETURN

800 REM SUCCESS OR CRASH TEST (TS IS TARGET SPEED)
805 CD = PEEK(1024+(GY*40)+X)
810 POKE 1024+(INT(OY)*40)+OX,32 :GOSUB 520
820 IF S > TS THEN GOTO CRASH
830 IF CD <> 37 THEN GOTO CRASH
840 IF CD = 37 THEN GOSUB WIN
850 PRINT "{DOWN}{DOWN}{LIGHTBLUE}               PLAY AGAIN YN{BLACK}"

10000 GET C$ : IF C$ = "" THEN 10000
10010 IF C$ = "N" THEN END
10020 IF C$ = "Y" THEN GOTO 20
10030 GOTO 10000


WIN:
POKE 1024+(INT(Y+1)*40)+X,37  
PRINT "{DOWN}{DOWN}{WHITE}              TOUCHDOWN!"
RETURN


CRASH:
POKE 1024+(INT(Y)*40)+X,42
POKE 1024+(INT(OY)*40)+X,42
POKE 1024+(INT(Y)*40)+X+1,42
POKE 1024+(INT(Y)*40)+X-1,42
PRINT "{DOWN}{DOWN}{RED}                   CRASH!"
GOTO 850

20000 LANDERSCREEN: REM SCREEN -> 
I=64: POKE 646,1
FOR Y=1 TO 4: FOR X=1 TO 8: OF=(Y)*40+X+13: POKE 55296+OF,1: POKE 1024+OF,I: I=I+1: NEXT X: NEXT Y
FOR Y=4 TO 8: FOR X=1 TO 8: OF=(Y+12)*40+X+14: POKE 55296+OF,1: POKE 1024+OF,I: I=I+1: NEXT X: NEXT Y
20120 RETURN

SETGRAPHICS:
PRINT CHR$(147): PRINT "LOADING ..."
POKE 53265,27:POKE 657,128:POKE 53272,30:POKE 53280,6:POKE 53281,6:POKE 646,1
FOR I=14336 TO 15352: READ X :POKE I,X :NEXT I
DATA 36,126,219,255,165,129,66,0
DATA 126,126,102,126,102,102,102,0
DATA 126,126,102,120,102,126,126,0
DATA 126,126,102,96,102,126,126,0
DATA 124,126,38,38,38,126,126,0
DATA 126,126,96,120,96,126,126,0
DATA 126,126,96,120,96,96,96,0
DATA 126,126,96,110,110,102,126,0
DATA 118,118,118,126,118,118,118,0
DATA 60,60,24,24,24,60,60,0
DATA 126,126,126,28,124,124,120,0
DATA 102,126,124,120,124,126,102,0
DATA 96,96,96,126,126,126,126,0
DATA 119,119,127,127,107,99,99,0
DATA 118,118,126,126,110,110,110,0
DATA 126,126,126,102,126,126,126,0
DATA 126,126,102,126,126,96,96,0
DATA 126,126,102,126,126,124,30,0
DATA 126,126,102,126,120,110,110,0
DATA 126,126,96,126,6,126,126,0
DATA 126,126,126,24,24,24,24,0
DATA 110,110,110,110,110,126,62,0
DATA 118,118,118,118,118,60,56,0
DATA 99,99,107,107,127,119,119,0
DATA 118,118,126,24,126,118,118,0
DATA 110,110,110,126,62,14,12,0
DATA 126,126,126,30,56,126,126,0
DATA 136,221,255,255,255,255,255,255
DATA 0,193,227,255,255,255,255,255
DATA 0,1,131,199,231,255,255,255
DATA 0,1,3,15,15,31,31,127
DATA 0,128,192,240,240,248,248,254
DATA 0,0,0,0,0,0,0,0
DATA 24,24,24,24,0,0,24,0
DATA 24,124,126,251,245,73,34,28
DATA 60,126,102,126,24,126,219,153
DATA 24,36,10,80,42,4,16,8
DATA 125,130,68,40,16,40,69,186
DATA 8,227,182,247,247,182,227,8
DATA 0,24,60,36,0,0,0,0
DATA 12,24,48,48,48,24,12,0
DATA 48,24,12,12,12,24,48,0
DATA 32,0,4,64,2,16,0,130
DATA 16,16,16,8,8,8,0,0
DATA 0,0,0,0,0,24,24,48
DATA 0,0,0,126,0,0,0,0
DATA 0,0,0,0,0,24,24,0
DATA 255,149,181,149,181,177,255,0
DATA 126,102,102,102,102,102,126,0
DATA 120,120,24,24,24,24,126,0
DATA 126,126,6,126,126,96,126,0
DATA 126,126,6,28,6,126,126,0
DATA 126,126,126,102,127,6,6,0
DATA 126,126,64,126,2,62,62,0
DATA 124,124,96,126,126,102,126,0
DATA 126,126,6,62,56,56,56,0
DATA 126,126,102,60,102,126,126,0
DATA 126,126,102,126,6,126,126,0
DATA 0,0,24,0,0,24,0,0
DATA 255,151,183,151,183,145,255,0
DATA 244,126,127,127,127,126,244,48
DATA 0,0,126,0,126,0,0,0
DATA 1,22,62,94,246,70,227,67
DATA 60,102,6,12,24,0,24,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,6,7,7,3,0,96,248,220,244,146,2,84
DATA 0,0,0,0,0,0,0,0
DATA 1,3,3,3,3,3,1,0
DATA 224,243,251,57,1,225,243,251
DATA 0,227,243,185,153,187,243,227
DATA 0,227,243,187,155,187,251,251
DATA 0,243,243,57,57,1,3,3
DATA 2,241,240,144,128,128,240,240
DATA 4,136,112,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0
DATA 3,3,3,1,0,224,224,96
DATA 57,57,241,225,0,124,126,54
DATA 129,129,129,129,0,126,127,55
DATA 155,155,153,152,0,124,126,55
DATA 25,185,243,243,0,124,126,54
DATA 128,152,248,240,0,248,252,102
DATA 0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0
DATA 96,96,96,96,96,112,127,63
DATA 51,119,127,127,51,51,51,51
DATA 51,51,51,51,51,51,51,51
DATA 51,51,51,51,51,55,62,60
DATA 48,112,124,124,48,102,126,124
DATA 102,110,252,252,102,102,102,102
DATA 0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,1,15
DATA 0,0,0,0,0,128,224,252
DATA 0,0,0,1,7,12,14,7
DATA 0,0,0,240,252,230,238,252
DATA 0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0
DATA 0,0,1,143,248,112,96,0
DATA 24,97,198,12,16,96,192,128
DATA 231,33,48,16,16,0,8,0
DATA 14,206,99,8,31,34,88,96
DATA 174,174,248,2,255,168,67,224
DATA 0,0,0,64,62,131,64,192
DATA 0,0,12,62,99,192,0,0
DATA 0,0,0,3,14,152,96,64
DATA 0,0,0,0,0,48,60,255
DATA 0,0,0,0,0,0,3,14
DATA 4,1,1,0,1,0,0,128
DATA 144,177,241,0,0,64,0,63
DATA 65,241,177,0,0,0,0,0
DATA 32,176,240,0,0,0,0,13
DATA 0,3,6,16,0,17,170,127
DATA 192,0,0,0,128,76,146,161
DATA 167,3,1,104,0,2,168,64
DATA 169,222,255,127,63,215,43,0
DATA 71,255,252,160,208,248,255,175
DATA 255,255,96,0,0,0,218,255
DATA 128,255,0,0,0,0,77,255
DATA 63,255,6,1,0,87,255,255
DATA 248,255,255,95,191,254,255,245
DATA 68,138,213,0,245,0,192,32
RETURN